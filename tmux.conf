# misc -------------------------------------------------------------------

set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",*256*:Tc"

setw -g xterm-keys on
set -s escape-time 10
set -sg repeat-time 600
set -s focus-events on

set -q -g status-utf8 on
setw -q -g utf8 on

# change prefix
set -g prefix M-Space
bind-key M-Space send-prefix

# history
set -g history-limit 10000
bind -n C-l send-keys C-l

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 5

set -g monitor-activity on
set -g visual-activity off

# title -----------------------------------------------------------------
set -g set-titles on
set-option -g set-titles-string "#h ❐ #S ● #I #W"

set-window-option -g window-active-style default
set-window-option -g window-status-activity-style "fg=default,bg=default,underscore"
set-window-option -g window-status-bell-style "fg=#ffff00,bg=default,blink,bold"
set-window-option -g window-status-last-style "fg=#00afff,bg=default,none"

set-window-option -g pane-border-style "fg=#444444,bg=default"
set-option -g pane-active-border-style "fg=#00afff,bg=default"
set-option -g display-panes-colour "#00afff"
set-option -g display-panes-active-colour "#00afff"

set-option -g message-command-style "fg=#ffff00,bg=#282c34,bold"
set-window-option -g mode-style "fg=#5c6370,bg=#080808,none"

# set-window-option -g pane-border-status top
# set pane border status to kubernetes cluster?
# only change the pane when a KUBECONFIG is being used
# otherwise the status bar will show the current context
#set-option -g pane-border-format '#(bash -ci kube_prompt tmux)'
#set -s status-interval 1

set-window-option -g window-status-style "fg=#8a8a8a,bg=#080808,none"
set-window-option -g window-status-format "#I #W"
set-window-option -g window-status-current-style "fg=#000000,bg=#00afff,bold"
set-window-option -g window-status-current-format "#[fg=#080808,bg=#00afff]#[fg=#000000,bg=#00afff,bold]#[fg=#000000,bg=#00afff,bold] #I #W #[fg=#00afff,bg=#080808,none]"

# status misc -----------------------------------------------
set-option -g message-style "fg=#282c34,bg=#ffff00,bold"
set-option -g message-command-style "fg=#ffff00,bg=#282c34,bold"
set-option -g mode-style "fg=#282c34,bg=#ffff00,bold"
set-option -g status-style "fg=#5c6370,bg=#080808,none"

# status left ---------------------------------------------
set-option -g status-left-length 1000
set-option -g status-left-style "fg=#8a8a8a,bg=#080808,none"
set-option -g status-left "#[fg=#000000,bg=#ffff00,bold] ❐ #S #[fg=#ffff00,bg=#ff00af,none]#[fg=#e4e4e4,bg=#ff00af,none] ↑ #(~/bin/uptime) #[fg=#ff00af,bg=default,none] "

# status right ---------------------------------------------
set-option -g status-right-length 1000
set-option -g status-right-style "fg=#8a8a8a,bg=#080808,none"
set-option -g status-right "#[fg=#080808,bg=default,none]#[fg=#8a8a8a,bg=#080808,none]#[fg=none]#[bg=none]#[none]#{?client_prefix,💻 ,}#[fg=none]#[bg=none]#[none]#{?session_many_attached,👓 ,}#[fg=none]#[bg=none]#[none]#{?pane_synchronized,🔒 ,}#(bash -ci on_vpn)  #(~/bin/battery) #[fg=#8a8a8a,bg=#080808,none] %R #[fg=#8a8a8a,bg=#080808,none] %d %b#[fg=#000000,bg=#080808,none]#[fg=#000000,bg=#000000,bold] #(bash -ci kube_prompt tmux) #[fg=#d70000,bg=#000000,none]#[fg=#e4e4e4,bg=#d70000,none] #(id -un)#[default]#[fg=#e4e4e4,bg=#d70000,none] #[fg=#e4e4e4,bg=#d70000,none]#[fg=#000000,bg=#e4e4e4,bold] #(hostname)"

# -- navigation ----------------------------------------------------------------

# create session
bind C-c new-session

# split current window horizontally
bind - split-window -v
# split current window vertically
bind _ split-window -h

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

# toggle mouse
set -g mouse on

# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'

# -- buffers -------------------------------------------------------------------

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

# -- user customizations -------------------------------------------------------
# this is the place to override or undo settings

# toggle synchronize panes on and off
bind e set-window-option synchronize-panes

# turn vpn on and off
bind-key V run "tmux new-window 'bash -ci viscosity'"

# search tmux panes with fzf
bind-key s run "tmux split-window '${HOME}/bin/tmux_pane_search'"

# use fuzzpass with 1pass to search for password
bind-key \\ run "tmux split-window -l 10 'bash -ci fuzzpass'"

# bind alt left and right to switch tabs directionally
bind-key -n M-Left previous-window
bind-key -n M-Right next-window

# switch windows alt+number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# pane navigation
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h  if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j  if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k  if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l  if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -n M-\  if-shell "$is_vim" "send-keys M-\\" "select-pane -l"
bind-key -n 'C-\' if-shell \"$is_vim\" 'send-keys M-\\\\' 'select-pane -l'

# moving in and out of panes through vim
bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l

# -- plugins -------------------------------------------------------
set -g @tpm_plugins '          \
   tmux-plugins/tpm             \
   tmux-plugins/tmux-resurrect  \
   tmux-plugins/tmux-continuum  \
   tmux-plugins/tmux-copycat  \
   tmux-plugins/tmux-yank  \
   laktak/extrakto  \
 '

# change default extrakt
set -g @extrakto_key 'space'
set -g @extrakto_default_opt 'lines'

# autosave state of tmux and restore on next boot
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'alacritty,fullscreen'
set -g @continuum-save-interval '5'
set -g @resurrect-capture-pane-contents 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
